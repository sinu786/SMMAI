{"ast":null,"code":"var _jsxFileName = \"/home/vulf/SMMAI-1/social-media-scheduler/src/components/CalendarView.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Calendar } from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [posts, setPosts] = useState([]);\n  const handleDateChange = newDate => {\n    setDate(newDate);\n  };\n  const handleAddPost = content => {\n    setPosts([...posts, {\n      date,\n      content\n    }]);\n  };\n  const scheduledPosts = posts.filter(post => post.date.toDateString() === date.toDateString());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Schedule Your Social Media Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Scheduled Posts for \", date.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: scheduledPosts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: post.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAddPost('New Post Content'),\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarView, \"0BdrMXXJ7J3sQ4BKQf+qDgYzI5U=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","CalendarView","_s","date","setDate","Date","posts","setPosts","handleDateChange","newDate","handleAddPost","content","scheduledPosts","filter","post","toDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","map","index","onClick","_c","$RefreshReg$"],"sources":["/home/vulf/SMMAI-1/social-media-scheduler/src/components/CalendarView.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Calendar } from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst CalendarView: React.FC = () => {\n    const [date, setDate] = useState(new Date());\n    const [posts, setPosts] = useState<{ date: Date; content: string }[]>([]);\n\n    const handleDateChange = (newDate: Date) => {\n        setDate(newDate);\n    };\n\n    const handleAddPost = (content: string) => {\n        setPosts([...posts, { date, content }]);\n    };\n\n    const scheduledPosts = posts.filter(post => post.date.toDateString() === date.toDateString());\n\n    return (\n        <div>\n            <h2>Schedule Your Social Media Posts</h2>\n            <Calendar onChange={handleDateChange} value={date} />\n            <div>\n                <h3>Scheduled Posts for {date.toDateString()}</h3>\n                <ul>\n                    {scheduledPosts.map((post, index) => (\n                        <li key={index}>{post.content}</li>\n                    ))}\n                </ul>\n            </div>\n            <button onClick={() => handleAddPost('New Post Content')}>Add Post</button>\n        </div>\n    );\n};\n\nexport default CalendarView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAoC,EAAE,CAAC;EAEzE,MAAMW,gBAAgB,GAAIC,OAAa,IAAK;IACxCL,OAAO,CAACK,OAAO,CAAC;EACpB,CAAC;EAED,MAAMC,aAAa,GAAIC,OAAe,IAAK;IACvCJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEH,IAAI;MAAEQ;IAAQ,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,MAAMC,cAAc,GAAGN,KAAK,CAACO,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACX,IAAI,CAACY,YAAY,CAAC,CAAC,KAAKZ,IAAI,CAACY,YAAY,CAAC,CAAC,CAAC;EAE7F,oBACIf,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCpB,OAAA,CAACF,QAAQ;MAACuB,QAAQ,EAAEb,gBAAiB;MAACc,KAAK,EAAEnB;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDpB,OAAA;MAAAgB,QAAA,gBACIhB,OAAA;QAAAgB,QAAA,GAAI,sBAAoB,EAACb,IAAI,CAACY,YAAY,CAAC,CAAC;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClDpB,OAAA;QAAAgB,QAAA,EACKJ,cAAc,CAACW,GAAG,CAAC,CAACT,IAAI,EAAEU,KAAK,kBAC5BxB,OAAA;UAAAgB,QAAA,EAAiBF,IAAI,CAACH;QAAO,GAApBa,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNpB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMf,aAAa,CAAC,kBAAkB,CAAE;MAAAM,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAEd,CAAC;AAAClB,EAAA,CA7BID,YAAsB;AAAAyB,EAAA,GAAtBzB,YAAsB;AA+B5B,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}